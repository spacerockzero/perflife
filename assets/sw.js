(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/jakob/dev/projects/sabbat/perflife/assets/js/sw/index.js":[function(require,module,exports){
"use strict";function placeholdAPIResponse(e){return e.headers.get("x-use-cache-only")?caches.match(e):fetch(e).then(function(t){return caches.open("photos-data").then(function(n){return Promise.all([t.clone().json(),caches.open("photos-imgs")]).then(function(e){var t=e[0],n=e[1],c=t.map(function(e){return e.thumbnailUrl});n.keys().then(function(e){e.forEach(function(e){-1==c.indexOf(e.url)&&n["delete"](e)})})}),n.put(e,t.clone()),t})})}function placeholdImageResponse(e){return caches.match(e).then(function(t){return t?t:fetch(e).then(function(t){return caches.open("photos-imgs").then(function(n){n.put(e,t)}),t.clone()})})}require("serviceworker-cache-polyfill");var version="v10";console.log("version:",version);var staticCacheName="photos-static-"+version;self.oninstall=function(e){self.skipWaiting(),e.waitUntil(caches.open(staticCacheName).then(function(e){return e.addAll(["./","./_dist/css/all.css","./_dist/js/page.js","./_dist/img/apple-touch-icon.png","./_dist/img/icon.png"])}))};var expectedCaches=[staticCacheName,"photos-imgs","photos-data"];self.onactivate=function(e){self.clients&&clients.claim&&clients.claim(),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.map(function(e){return/^photos-/.test(e)&&-1===expectedCaches.indexOf(e)?caches["delete"](e):void 0}))}))},self.onfetch=function(e){e.respondWith(caches.match(e.request).then(function(t){return t||fetch(e.request)}))};

},{"serviceworker-cache-polyfill":"/Users/jakob/dev/projects/sabbat/perflife/node_modules/serviceworker-cache-polyfill/index.js"}],"/Users/jakob/dev/projects/sabbat/perflife/node_modules/serviceworker-cache-polyfill/index.js":[function(require,module,exports){
Cache.prototype.add||(Cache.prototype.add=function(t){return this.addAll([t])}),Cache.prototype.addAll||(Cache.prototype.addAll=function(t){function e(t){this.name="NetworkError",this.code=19,this.message=t}var r=this;return e.prototype=Object.create(Error.prototype),Promise.resolve().then(function(){if(arguments.length<1)throw new TypeError;return t=t.map(function(t){return t instanceof Request?t:String(t)}),Promise.all(t.map(function(t){"string"==typeof t&&(t=new Request(t));var r=new URL(t.url).protocol;if("http:"!==r&&"https:"!==r)throw new e("Invalid scheme");return fetch(t.clone())}))}).then(function(e){return Promise.all(e.map(function(e,n){return r.put(t[n],e)}))}).then(function(){return void 0})});

},{}]},{},["/Users/jakob/dev/projects/sabbat/perflife/assets/js/sw/index.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
